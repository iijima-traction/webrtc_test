<div class=content>
<h1><a href="/"><%= title %></a></h1>
<h2><%= subtitle %></h2>
<p>Welcome to <%= title %></p>

<div class=left>
<h3>demo</h3>
<video controls autoplay></video>
<output></output>
</div>

<div class=right>
<h3>code</h3>
<pre class="prettyprint">
</pre>
</div>

<div class=clear></div>

<div>
<h3>Useful Links</h3>
<ul>
  <li><a href="http://www.webrtc.org/">Web RTC Home Page</a></li>
  <li><a href="http://www.w3.org/TR/2011/WD-webrtc-20111027/">Web RTC API spec(Working Draft)</a></li>
  <li><a href="http://tools.ietf.org/html/draft-cbran-rtcweb-data-00">RTC-Web Non-Media Data Transport Requirements</a></li>
  <li><a href="http://tools.ietf.org/html/draft-ietf-rtcweb-rtp-usage-01">Web Real-Time Communication (WebRTC): Media Transport and Use of RTP</a></li>
  <li><a href="http://d.hatena.ne.jp/Syunpei/20111212/1323679295">A blog well explained WebRTC in Japanese(IT-Walker on hatena)</a></li>
</ul>
</div>
</div>



<script id="rtc">
$(function(){
  // Assign the <video> element to a variable
  var video = $('video')[0]

  // Replace the source of the video element with the stream from the camera
  navigator.getUserMedia_ = navigator.getUserMedia || navigator.webkitGetUserMedia;
  if(!!navigator.getUserMedia_ !== false) {
    navigator.getUserMedia_("video audio", successCallback, errorCallback);
    function successCallback(stream) {
      video.src = window.webkitURL ?
        window.webkitURL.createObjectURL(stream) :
        stream;
    }
    function errorCallback(error) {
      console.error('An error occurred: [CODE ' + error.code + ']');
      return;
    }
  } else {
    console.log('Native web camera streaming (getUserMedia) is not supported in this browser.');
    $('output').html('Sorry, your browser doesn\'t support getUserMedia');
    return;
  }
});
</script>

<!-- display sample code inside <pre> -->
<script>
var code = $("#rtc").text().replace("<", "&lt;").replace(">", "&gt");
$("pre").html(code);
prettyPrint();
</script>
